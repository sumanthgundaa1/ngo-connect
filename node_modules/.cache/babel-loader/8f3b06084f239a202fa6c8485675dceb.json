{"ast":null,"code":"var _jsxFileName = \"/Users/sg620k/Documents/ngo-connect/src/pages/VolunteerOpenings/VolunteerOpenings.tsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { Grid, Row } from 'react-flexbox-grid';\nimport VolunteerOpportunityCard from '../../components/VolunteerOpportunityCard/VolunteerOpportunityCard';\nimport './VolunteerOpenings.scss';\n// TODO: Remove mock data below once real data exists and can be fetched from API\nconst mockNgoSummary = [{\n  name: 'Akshay Patra',\n  ngoDescription: 'Running mid-day meal programmes and serving school lunches to over 1.8 million children across 12 states and 2 union territories',\n  supportNeeded: 'Online Fundraising',\n  supportDescription: 'Register yourself as an online fund raising volunteer. Fund raised will go to providing mid-day meal to the school children. Dedicated fundraisers are acknowledged for their efforts on select collaterals of Akshaya Patra.',\n  beneficiaries: 'School Children',\n  locations: ['Remote / Virtual', 'Hyderabad'],\n  skillsNeeded: ['Public Relations', 'Fundraising experience', 'Marketing'],\n  contactInformation: {\n    email: 'anil.rs@akshayapatra.org',\n    phone: '080 30143400'\n  }\n}, {\n  name: 'Bhumi India',\n  ngoDescription: 'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n  supportNeeded: 'Content generation for education',\n  supportDescription: 'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n  beneficiaries: 'Young adults and children',\n  locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n  skillsNeeded: ['Microsoft Office skills'],\n  contactInformation: {\n    email: 'contact@bhumi.ngo'\n  }\n}, {\n  name: 'Bhumi India',\n  ngoDescription: 'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n  supportNeeded: 'Content generation for education',\n  supportDescription: 'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n  beneficiaries: 'Young adults and children',\n  locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n  skillsNeeded: ['Microsoft Office skills'],\n  contactInformation: {\n    email: 'contact@bhumi.ngo'\n  }\n}, {\n  name: 'Bhumi India',\n  ngoDescription: 'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n  supportNeeded: 'Content generation for education',\n  supportDescription: 'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n  beneficiaries: 'Young adults and children',\n  locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n  skillsNeeded: ['Microsoft Office skills'],\n  contactInformation: {\n    email: 'contact@bhumi.ngo'\n  }\n}];\n\nclass VolunteerOpenings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  /*\n    TODO: make an API call to fetch volunteer opportunity data to pass down to VolunteerOpportunityCard component\n    1. I recommend we use Apollo / GraphQL to hit our API endpoints, it's a seamless and smooth experience with React\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Box, {\n      component: \"div\",\n      className: \"volunteer-openings-page-container\",\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"data-row\",\n      between: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, mockNgoSummary && mockNgoSummary.length && /*#__PURE__*/React.createElement(Box, {\n      className: \"volunteer-opening-flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, mockNgoSummary.map((summaryItem, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"volunteer-opening-flex-item\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(VolunteerOpportunityCard, {\n        ngoSummary: summaryItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }));\n    })))));\n  }\n\n}\n\nexport default withRouter(VolunteerOpenings);","map":{"version":3,"sources":["/Users/sg620k/Documents/ngo-connect/src/pages/VolunteerOpenings/VolunteerOpenings.tsx"],"names":["React","Component","withRouter","Box","Grid","Row","VolunteerOpportunityCard","mockNgoSummary","name","ngoDescription","supportNeeded","supportDescription","beneficiaries","locations","skillsNeeded","contactInformation","email","phone","VolunteerOpenings","constructor","props","state","render","length","map","summaryItem","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {Box} from '@material-ui/core';\nimport {Grid, Row} from 'react-flexbox-grid';\nimport VolunteerOpportunityCard from '../../components/VolunteerOpportunityCard/VolunteerOpportunityCard';\nimport './VolunteerOpenings.scss';\nimport {INGOSummary} from '../../common/interfaces';\n\n// TODO: Remove mock data below once real data exists and can be fetched from API\nconst mockNgoSummary: INGOSummary[] = [\n  {\n    name: 'Akshay Patra',\n    ngoDescription:\n      'Running mid-day meal programmes and serving school lunches to over 1.8 million children across 12 states and 2 union territories',\n    supportNeeded: 'Online Fundraising',\n    supportDescription:\n      'Register yourself as an online fund raising volunteer. Fund raised will go to providing mid-day meal to the school children. Dedicated fundraisers are acknowledged for their efforts on select collaterals of Akshaya Patra.',\n    beneficiaries: 'School Children',\n    locations: ['Remote / Virtual', 'Hyderabad'],\n    skillsNeeded: ['Public Relations', 'Fundraising experience', 'Marketing'],\n    contactInformation: {\n      email: 'anil.rs@akshayapatra.org',\n      phone: '080 30143400',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n  {\n    name: 'Bhumi India',\n    ngoDescription:\n      'The organisation provides youngsters a platform to serve the society and bridges the gap between the educated and the uneducated',\n    supportNeeded: 'Content generation for education',\n    supportDescription:\n      'Our volunteers educate and mentor children from orphanages, slum and village community centres across the country to give them a better future, which will benefit them as well as our country.',\n    beneficiaries: 'Young adults and children',\n    locations: ['Remote / Virtual', 'Bombay', 'Delhi'],\n    skillsNeeded: ['Microsoft Office skills'],\n    contactInformation: {\n      email: 'contact@bhumi.ngo',\n    },\n  },\n];\n\nclass VolunteerOpenings extends Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /*\n    TODO: make an API call to fetch volunteer opportunity data to pass down to VolunteerOpportunityCard component\n    1. I recommend we use Apollo / GraphQL to hit our API endpoints, it's a seamless and smooth experience with React\n  */\n\n  render() {\n    return (\n      <Box component=\"div\" className=\"volunteer-openings-page-container\" display=\"block\">\n        <Grid fluid className=\"grid\">\n          <Row className=\"data-row\" between=\"xs\">\n            {mockNgoSummary && mockNgoSummary.length && (\n              <Box className=\"volunteer-opening-flex-container\">\n                {mockNgoSummary.map((summaryItem, index) => {\n                  return (\n                    <div className=\"volunteer-opening-flex-item\" key={index}>\n                      <VolunteerOpportunityCard ngoSummary={summaryItem} />\n                    </div>\n                  );\n                })}\n              </Box>\n            )}\n          </Row>\n        </Grid>\n      </Box>\n    );\n  }\n}\n\nexport default withRouter(VolunteerOpenings);\n"]},"metadata":{},"sourceType":"module"}